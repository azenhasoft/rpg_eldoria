import json
import random
import os

# Atributos do jogador
jogador = {
    "nome": "Eldrin",
    "mana": 0,
    "mana_max": 0,
    "saude": 0,
    "saude_max": 0,
    "conhecimento": 0,
    "inventario": [],
    "vitorias": 0,
    "cena_atual": "introducao",
    "nivel": 1,
    "xp": 0,
    "feitiços": [],
    "escudo_turnos": 0,
    "classe": ""
}

# Variáveis globais
inimigo_atual = None
sacerdote_vivo = False
sacerdote = None

# Escolha de Classe
def escolher_classe():
    while not jogador["classe"]:
        print("Escolha sua classe:")
        print("1. Guerreiro (Foco em Saúde, poucos feitiços)")
        print("2. Mago (Foco em Mana, muitos feitiços)")
        print("3. Ladino (Foco em Conhecimento, furtividade e itens)")
        escolha = input("Escolha (1-3): ")
        if escolha == "1":
            jogador["classe"] = "Guerreiro"
            jogador["saude_max"] = 60
            jogador["saude"] = 60
            jogador["mana_max"] = 20
            jogador["mana"] = 20
            jogador["conhecimento"] = 5
            jogador["feitiços"] = ["Golpe Forte"]
            print("Você se tornou um Guerreiro.")
        elif escolha == "2":
            jogador["classe"] = "Mago"
            jogador["saude_max"] = 40
            jogador["saude"] = 40
            jogador["mana_max"] = 80
            jogador["mana"] = 80
            jogador["conhecimento"] = 10
            jogador["feitiços"] = ["Bola de Fogo", "Visão Mística"]
            print("Você se tornou um Mago.")
        elif escolha == "3":
            jogador["classe"] = "Ladino"
            jogador["saude_max"] = 50
            jogador["saude"] = 50
            jogador["mana_max"] = 30
            jogador["mana"] = 30
            jogador["conhecimento"] = 15
            jogador["inventario"].append("Kit de Ladrão")
            jogador["feitiços"] = ["Furtividade"]
            print("Você se tornou um Ladino.")
        else:
            print("Escolha inválida. Tente novamente.")
    print(f"Nome: {jogador['nome']}, Classe: {jogador['classe']}, Saúde: {jogador['saude']}/{jogador['saude_max']}, Mana: {jogador['mana']}/{jogador['mana_max']}, Conhecimento: {jogador['conhecimento']}, Feitiços: {jogador['feitiços']}, Inventário: {jogador['inventario']}")

# Sistema de níveis
def verificar_nivel():
    xp_requisitos = [80, 160, 240, 320]
    feitiços_por_nivel = {
        2: {"Mago": "Raio Congelante", "Guerreiro": "Bloqueio", "Ladino": "Ataque Furtivo"},
        3: {"Mago": "Ilusão", "Guerreiro": "Fúria", "Ladino": "Camuflagem"},
        4: {"Mago": "Cura Arcana", "Guerreiro": "Segundo Vento", "Ladino": "Desarmar Armadilha"},
        5: {"Mago": "Tempestade Arcana", "Guerreiro": "Golpe Destruidor", "Ladino": "Veneno"}
    }
    nivel_anterior = jogador["nivel"]
    for nivel, xp_req in enumerate(xp_requisitos, 1):
        if jogador["xp"] >= xp_req and jogador["nivel"] < nivel + 1:
            jogador["nivel"] = nivel + 1
            jogador["saude_max"] += 10
            jogador["saude"] = jogador["saude_max"]
            jogador["mana_max"] += 15
            jogador["mana"] = jogador["mana_max"]
            if nivel + 1 in feitiços_por_nivel and jogador["classe"] in feitiços_por_nivel[nivel + 1]:
                novo_feitico = feitiços_por_nivel[nivel + 1][jogador["classe"]]
                jogador["feitiços"].append(novo_feitico)
                print(f"Você desbloqueou: {novo_feitico}!")
    if jogador["nivel"] > nivel_anterior:
        print(f"Você alcançou o nível {jogador['nivel']}! Saúde e Mana aumentados.")

# Funções auxiliares
def salvar_jogo():
    with open("save.json", "w") as f:
        json.dump(jogador, f)
    print("Jogo salvo!")

def carregar_jogo():
    if os.path.exists("save.json"):
        global jogador
        with open("save.json", "r") as f:
            jogador = json.load(f)
        print("Jogo carregado!")
        exibir_cena(jogador["cena_atual"])
    else:
        print("Nenhum jogo salvo encontrado!")

def exibir_cena(cena):
    jogador["cena_atual"] = cena
    if cena in cenas:
        cenas[cena](None)

def mostrar_status():
    print(f"\n--- Estado do Jogador ---")
    print(f"Nome: {jogador['nome']}")
    print(f"Classe: {jogador['classe']}")
    print(f"Nível: {jogador['nivel']}")
    print(f"XP: {jogador['xp']}")
    print(f"Saúde: {jogador['saude']}/{jogador['saude_max']}")
    print(f"Mana: {jogador['mana']}/{jogador['mana_max']}")
    print(f"Conhecimento: {jogador['conhecimento']}")
    print(f"Inventário: {jogador['inventario']}")
    print(f"Feitiços: {jogador['feitiços']}")
    print("-------------------------\n")

# Funções de cenas
def introducao(escolha):
    while True:
        print(f"""
Bem-vindo, {jogador['nome']}, aventureiro!
A cidade de Vaeloria clama por sua ajuda. Desaparecimentos assombram as ruas, e luzes estranhas brilham na Floresta Sombria.
Você chega aos portões da cidade. O que deseja fazer?
1. Ir ao Salão do Conselho
2. Visitar a taverna
3. Explorar a biblioteca arcana
4. Salvar jogo
5. Carregar jogo
6. Mostrar Status
        """)
        escolha = input("Escolha (1-6): ")
        if escolha == "1":
            exibir_cena("salao_conselho")
            break
        elif escolha == "2":
            exibir_cena("taverna")
            break
        elif escolha == "3":
            exibir_cena("biblioteca")
            break
        elif escolha == "4":
            salvar_jogo()
        elif escolha == "5":
            carregar_jogo()
            break
        elif escolha == "6":
            mostrar_status()
        else:
            print("Escolha inválida. Tente novamente.")

def salao_conselho(escolha):
    while True:
        print(f"""
No Salão do Conselho, o Lorde Regente e o Capitão da Guarda te recebem. O Regente explica: 'Os desaparecimentos começaram há semanas.'
1. Perguntar ao Regente sobre o culto (Conhecimento >= 15)
2. Falar com o Capitão sobre suspeitas (Conhecimento >= 10)
3. Aceitar a missão e partir
4. Salvar jogo
5. Carregar jogo
6. Mostrar Status
        """)
        escolha = input("Escolha (1-6): ")
        if escolha == "1":
            if jogador["conhecimento"] >= 15:
                print("O Regente sussurra: 'Há rumores de um culto nas ruínas.'")
                jogador["conhecimento"] += 5
                jogador["xp"] += 20
                verificar_nivel()
                exibir_cena("floresta_sombria")
                break
            else:
                print("Você não tem conhecimento suficiente para perguntar sobre isso.")
        elif escolha == "2":
            if jogador["conhecimento"] >= 10:
                print("O Capitão diz: 'Um conselheiro age estranho. Cuidado na floresta.'")
                jogador["inventario"].append("Dica do Traidor")
                jogador["xp"] += 15
                verificar_nivel()
                exibir_cena("floresta_sombria")
                break
            else:
                print("Você não tem conhecimento suficiente para entender as suspeitas do Capitão.")
        elif escolha == "3":
            jogador["inventario"].append("Mapa da Floresta")
            jogador["conhecimento"] += 5
            jogador["xp"] += 10
            verificar_nivel()
            exibir_cena("floresta_sombria")
            break
        elif escolha == "4":
            salvar_jogo()
        elif escolha == "5":
            carregar_jogo()
            break
        elif escolha == "6":
            mostrar_status()
        else:
            print("Escolha inválida. Tente novamente.")

def taverna(escolha):
    while True:
        print(f"""
Na taverna, um velho bêbado murmura sobre 'sombras que falam'. Um encapuzado te observa.
1. Confrontar o encapuzado
2. Falar com o bêbado (Conhecimento >= 10)
3. Sair da taverna
4. Usar Poção de Mana (se tiver)
5. Salvar jogo
6. Mostrar Status
        """)
        escolha = input("Escolha (1-6): ")
        if escolha == "1":
            print("O encapuzado foge, mas deixa cair um pingente.")
            jogador["inventario"].append("Pingente Misterioso")
            jogador["xp"] += 10
            verificar_nivel()
            exibir_cena("floresta_sombria")
            break
        elif escolha == "2":
            if jogador["conhecimento"] >= 10:
                print("O bêbado diz: 'Eles se reúnem nas ruínas antigas.'")
                jogador["conhecimento"] += 5
                jogador["xp"] += 20
                verificar_nivel()
                exibir_cena("floresta_sombria")
                break
            else:
                print("O bêbado parece confuso demais para conversar.")
        elif escolha == "3":
            exibir_cena("floresta_sombria")
            break
        elif escolha == "4":
            if "Poção de Mana" in jogador["inventario"]:
                jogador["mana"] = min(jogador["mana_max"], jogador["mana"] + 30)
                jogador["inventario"].remove("Poção de Mana")
                print("Você usou uma Poção de Mana, restaurando 30 de Mana.")
            else:
                print("Você não tem Poções de Mana.")
        elif escolha == "5":
            salvar_jogo()
        elif escolha == "6":
            mostrar_status()
        else:
            print("Escolha inválida. Tente novamente.")

def biblioteca(escolha):
    while True:
        print(f"""
Na biblioteca arcana, você encontra um tomo sobre magias proibidas.
1. Lançar Visão Mística (-10 Mana)
2. Continuar lendo o tomo
3. Sair da biblioteca
4. Usar Poção de Mana (se tiver)
5. Salvar jogo
6. Mostrar Status
        """)
        escolha = input("Escolha (1-6): ")
        if escolha == "1":
            if jogador["mana"] >= 10 and "Visão Mística" in jogador["feitiços"]:
                jogador["mana"] -= 10
                print("Você vê uma visão: um altar na floresta, pulsando com energia negra.")
                jogador["conhecimento"] += 10
                jogador["xp"] += 20
                verificar_nivel()
                exibir_cena("floresta_sombria")
                break
            elif "Visão Mística" not in jogador["feitiços"]:
                print("Você não conhece esse feitiço.")
            else:
                print("Mana insuficiente!")
        elif escolha == "2":
            print("O tomo menciona um culto antigo.")
            jogador["conhecimento"] += 5
            jogador["xp"] += 10
            verificar_nivel()
            exibir_cena("floresta_sombria")
            break
        elif escolha == "3":
            exibir_cena("floresta_sombria")
            break
        elif escolha == "4":
            if "Poção de Mana" in jogador["inventario"]:
                jogador["mana"] = min(jogador["mana_max"], jogador["mana"] + 30)
                jogador["inventario"].remove("Poção de Mana")
                print("Você usou uma Poção de Mana, restaurando 30 de Mana.")
            else:
                print("Você não tem Poções de Mana.")
        elif escolha == "5":
            salvar_jogo()
        elif escolha == "6":
            mostrar_status()
        else:
            print("Escolha inválida. Tente novamente.")

def evento_aleatorio(escolha):
    eventos = [
        ("Você encontra um baú encantado. Dentro, há uma Poção de Mana.", lambda: jogador["inventario"].append("Poção de Mana")),
        ("Uma armadilha mágica dispara! Você perde saúde.", lambda: jogador.update({"saude": max(0, jogador["saude"] - 12)})),
        ("Um viajante perdido te dá um Amuleto de Proteção.", lambda: jogador["inventario"].append("Amuleto de Proteção")),
        ("Um Corvo Necrótico ataca!", lambda: None, "combate_inimigos", {"nome": "Corvo Necrótico", "hp": 30, "dano": 12, "texto": "Um corvo necrótico voa em sua direção!", "fraqueza": ["Ilusão", "Raio Congelante"], "esquiva": 0.3})
    ]
    evento, efeito, *extras = random.choice(eventos)
    print(f"{evento}\n1. Continuar")
    input("Escolha (1): ")
    if len(extras) > 0:
        jogador["cena_atual"] = extras[0]
        global inimigo_atual
        inimigo_atual = extras[1]
        inimigo_atual["hp_atual"] = inimigo_atual["hp"]
        exibir_cena("combate_inimigos")
    else:
        efeito()
        jogador["xp"] += 15
        verificar_nivel()
        if jogador["saude"] <= 0:
            fim_jogo("Você sucumbe aos ferimentos. Vaeloria está perdida.")
        else:
            exibir_cena("floresta_sombria")

def encontro_truidor(escolha):
    while True:
        print(f"""
Você encontra um conselheiro de Vaeloria, mas ele parece nervoso. Ele admite: 'Fui forçado a ajudar o culto!'
1. Convencê-lo a se redimir (Conhecimento >= 25)
2. Confrontá-lo
3. Deixá-lo ir
4. Salvar jogo
5. Mostrar Status
        """)
        escolha = input("Escolha (1-5): ")
        if escolha == "1":
            if jogador["conhecimento"] >= 25:
                print("O traidor concorda em ajudar, revelando o ponto fraco do líder do culto.")
                jogador["inventario"].append("Segredo do Culto")
                jogador["conhecimento"] += 10
                jogador["xp"] += 40
                verificar_nivel()
                exibir_cena("ruinas_antigas")
                break
            else:
                print("Você não consegue convencê-lo.")
        elif escolha == "2":
            print("O traidor entra em pânico e ativa uma armadilha mágica!")
            jogador["saude"] -= 15
            jogador["xp"] += 10
            verificar_nivel()
            if jogador["saude"] <= 0:
                fim_jogo("Você sucumbe à armadilha. Vaeloria está perdida.")
            else:
                exibir_cena("ruinas_antigas")
                break
        elif escolha == "3":
            print("O traidor foge, mas deixa um mapa parcial das ruínas.")
            jogador["inventario"].append("Mapa Parcial")
            jogador["xp
